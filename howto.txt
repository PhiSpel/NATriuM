This file describes the steps conducted for the creation of the NATriuM project under eclipse:

   R E Q U I R E D   R E S O U R C E S
0) Install resources (via apt-get, synaptic, or manually)
    0.0) All boost libraries (sudo apt-get install libboost-all-dev)
    0.1) Install cmake download and untar tarball from cmake homepage; follow instructions
         (Version 2.8.8 required!)
         (Version on ubuntu software center is too old)
         tar -xzvf cmake....tgz; cd cmake...; ./bootstrap; make; make install;
    0.2) If not installed, install valgrind (e.g. sudo apt-get install valgrind)
         If not installed, install blas/lapack
         If not installed, install gfortran
    0.3) PETSc
        0.3.1) download and untar tarball from petsc homepage
        0.3.2) access petsc directory
        0.3.3) set environment variables PETSC_DIR, PETSC_ARCH in ~/.bashrc, e.g.
               export PETSC_DIR=/home/kraemer/Dissertation/petsc-3.4.2
               export PETSC_ARCH=ubuntu_lenovo (can be an arbitrary name for your installation)
        0.3.3) ./config/configure.py --with-shared-libraries=1 --with-x=0 --with-mpi=1 --download-hypre=1
        0.3.4) make
        0.3.5) make test   
    0.4) deal.ii
        0.4.1) download and untar tarball from deal.ii homepage
        0.4.2) mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX=/path/install/dir -DDEAL_II_WITH_PETSC=ON -DDEAL_II_WITH_MPI=ON ../deal.II
        0.4.3) make install
        0.4.4) set environment variable DEAL_II_DIR to deal path
        
 1) Install Eclipse
    1.1) get tar at eclipse web page -> Downloads -> Eclipse bundle for c++ developers (or similar)
    1.2) move tar to /opt
    1.3) untar (no installation needed)
    1.4) (sudo) create a file "eclipse" in /usr/local/bin -> (sudo) open in text editor
    1.5) write the following lines (if not the eclipse main menu is not going to work)
            #!/bin/sh
            UBUNTU_MENUPROXY= /opt/eclipse/eclipse
    1.6) close
    1.7) sudo chmod +x 
    1.8) Launch eclipse by typing "eclipse" in a terminal
    
         

HOW I MANAGED TO CREATE THE CMAKE NATRIUM PROJECT:
A.1) got to NATriuM root directory
     cd ~/eclipse_workspace/NATriuM
A.2) copy CMakeLists.txt from step-17 tutorial to NATriuM folder (and change it drastically ;) )
A.3) automatically create .project and .cproject file for eclipse
     mkdir bin
     cd bin
     cmake -G "Eclipse CDT4 - Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug .. -B.
A.4) Start eclipse
A.6) Disable eclipse Auto-build (Project->Build automatically 'off')
A.7) [only if NATriuM is not yet on the left] File->Import->Existing Projects into Workspace->...
A.8) Click Run 
A.9a) [if Run fails] Run->Run configurations...->new (bin/test/NATriuM_UnitTest_exe)
A.9b)                Run->Run configurations...->new (bin/NATriuM_exe)
A.10) Define an external tool calling cmake
      Run -> External tools -> External tool configurations
      New (+)
      name: NATriuM CMake
      location: /usr/local/bin/cmake
      working directory: ${workspace_loc:/NATriuM}/bin
      arguments: "Eclipse CDT4 - Unix Makefiles" .. -B.
      Environment->Add: DEAL_II_DIR /path/to/dealii
      (just so you know: -B. specifies the working directory as cmake PROJECT_BINARY_DIR)
A.11) [If Build fails] define an external tool calling make
      New (+)
      name: NATriuM Make (Build)
      location: /usr/bin/make
      working directory: ${workspace_loc:/NATriuM}/bin
      arguments: 
      

Toolchain (How to compile and run NATriuM):
-> External Tool Button -> NATriuM CMake
-> External Tool Button -> NATriuM Make
-> Either Run 



WHEN CHANGING ANY CMAKELISTS FILE
... you have to rebuild your cmake by typing
mkdir ~/eclipse_workspace/NATriuM/bin; cd ~/eclipse_workspace/NATriuM/bin; cmake "Eclipse CDT4 - Unix Makefiles" ../ -B.;
or (alternatively)
run the external tool NATriuM CMake (see A.10)

Creates an out-of-source build in bin directory.
the option -B. sets the cmake project's Binary directory to .
../ navigates to the folder containing the root CMakeList.txt




###                             ###
#      D E P R E C A T E D:       #
###                             ###
(in the current version of the code this is all done by cmake files CMakeLists.txt)





   M A K E   I T   P O S S I B L E   T O   I N C L U D E   F I L E S  F R O M   T H E   L I B R A R Y
2) Include external ressources: Project -> Properties -> C/C++ Build -> Settings -> Cross G++ Compiler
   2.1) Add deal.ii includes directory to Includes (e.g. /home/kraemer/Dissertation/deal.II/include)
   2.2) Add base and bundled subdirectories separately
   2.3) Add boost to Includes (e.g. /usr/include/boost) -> ATTENTION: Deal uses boost 1.49; Local installation is 1.48
   
   
    M A K E   T H E   L I N K E R   A B L E   T O   F I N D   T H E   L I B R A R I E S   
3) Add libraries: Project -> Properties -> C/C++ Build -> Settings -> Cross G++ Linker
   3.1) Add deal.ii lib directory to Libraries -> Library search path (e.g. /home/kraemer/Dissertation/deal.II/lib)
   3.2) Add the library deal_II to Libraries -> Libraries (Simply add "deal_II") 
       (note: This refers to the file libdeal_II.so in deal.II/lib -> pre- and postfix are omitted)
   3.3) Add the library z to Libraries -> Libraries (this is the standard compression library which is used by deal.ii)
   3.4) Add the boost libraries boost_unit_test_framework-mt, and boost_system; No Library path required 
   

    M A K E   T H E   E X E C U T A B L E   A B L E   T O   F I N D   T H E   L I B R A R I E S   
4) Edit LD_LIBRARY_PATH
   4.1) Set environment variable LD_LIBRARY_PATH (in ~/.bashrc or in Run->Run Configurations->Environment)
        to deal.ii's lib directory (e.g. LD_LIBRARY_PATH=(irgendwelche_pfade):/home/kraemer/Dissertation/deal.II/lib/)
   4.2) Make sure /usr/lib is in the LD_LIBRARY_PATH
   4.3) Don't forget to "source ~/.bashrc" thereafter
   
   
5) Additional settings in Project Properties
   5.1) Switch to old c++ namings by adding -std=c++0x to the compile flags
        Otherwise there may be problems with the boost libraries.
        
   