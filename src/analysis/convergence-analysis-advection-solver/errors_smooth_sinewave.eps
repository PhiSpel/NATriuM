%!PS-Adobe-2.0 EPSF-2.0
%%Title: errors.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Mon Dec  8 12:37:31 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 251
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -93 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 251 lineto 50 251 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (errors.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (kraemer)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Dec  8 12:37:31 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 280 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 4032.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1596 896 M
63 0 V
3380 0 R
-63 0 V
stroke
1428 896 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 1e-20)]
] -93.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1596 1023 M
31 0 V
3412 0 R
-31 0 V
1596 1150 M
63 0 V
3380 0 R
-63 0 V
stroke
1428 1150 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 1e-18)]
] -93.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1596 1278 M
31 0 V
3412 0 R
-31 0 V
1596 1405 M
63 0 V
3380 0 R
-63 0 V
stroke
1428 1405 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 1e-16)]
] -93.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1596 1532 M
31 0 V
3412 0 R
-31 0 V
1596 1659 M
63 0 V
3380 0 R
-63 0 V
stroke
1428 1659 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 1e-14)]
] -93.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1596 1787 M
31 0 V
3412 0 R
-31 0 V
1596 1914 M
63 0 V
3380 0 R
-63 0 V
stroke
1428 1914 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 1e-12)]
] -93.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1596 2041 M
31 0 V
3412 0 R
-31 0 V
1596 2168 M
63 0 V
3380 0 R
-63 0 V
stroke
1428 2168 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 1e-10)]
] -93.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1596 2296 M
31 0 V
3412 0 R
-31 0 V
1596 2423 M
63 0 V
3380 0 R
-63 0 V
stroke
1428 2423 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 1e-08)]
] -93.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1596 2550 M
31 0 V
3412 0 R
-31 0 V
1596 2677 M
63 0 V
3380 0 R
-63 0 V
stroke
1428 2677 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 1e-06)]
] -93.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1596 2804 M
31 0 V
3412 0 R
-31 0 V
1596 2932 M
63 0 V
3380 0 R
-63 0 V
stroke
1428 2932 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 0.0001)]
] -93.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1596 3059 M
31 0 V
3412 0 R
-31 0 V
1596 3186 M
63 0 V
3380 0 R
-63 0 V
stroke
1428 3186 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 0.01)]
] -93.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1596 3313 M
31 0 V
3412 0 R
-31 0 V
1596 3441 M
63 0 V
3380 0 R
-63 0 V
stroke
1428 3441 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 1)]
] -93.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1596 3568 M
31 0 V
3412 0 R
-31 0 V
1596 3695 M
63 0 V
3380 0 R
-63 0 V
stroke
1428 3695 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 100)]
] -93.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1596 896 M
0 63 V
0 2736 R
0 -63 V
stroke
1596 616 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 0)]
] -93.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2170 896 M
0 63 V
0 2736 R
0 -63 V
stroke
2170 616 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 2)]
] -93.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2744 896 M
0 63 V
0 2736 R
0 -63 V
stroke
2744 616 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 4)]
] -93.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3318 896 M
0 63 V
0 2736 R
0 -63 V
stroke
3318 616 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 6)]
] -93.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3891 896 M
0 63 V
0 2736 R
0 -63 V
stroke
3891 616 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 8)]
] -93.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4465 896 M
0 63 V
0 2736 R
0 -63 V
stroke
4465 616 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 10)]
] -93.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5039 896 M
0 63 V
0 2736 R
0 -63 V
stroke
5039 616 M
[ [(Helvetica) 280.0 0.0 true true 0 ( 12)]
] -93.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1596 3695 N
0 -2799 V
3443 0 V
0 2799 V
-3443 0 V
Z stroke
LCb setrgbcolor
280 2295 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 280.0 0.0 true true 0 (||\(u-u)]
[(Helvetica) 224.0 -84.0 true true 0 (ref)]
[(Helvetica) 280.0 0.0 true true 0 (\)||)]
[(Symbol) 224.0 -84.0 true true 0 (\245)]
[(Helvetica) 280.0 0.0 true true 0 (  )]
] -65.3 MCshow
grestore
LTb
LCb setrgbcolor
3317 196 M
[ [(Helvetica) 280.0 0.0 true true 0 (p)]
] -93.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
2.000 UP
7.000 UL
LT0
0.75 0.25 0.00 C LCb setrgbcolor
5960 3555 M
[ [(Helvetica) 280.0 0.0 true true 0 (N = 1)]
] -93.3 MRshow
LT0
0.75 0.25 0.00 C 6128 3555 M
735 0 V
1883 3411 M
287 -13 V
287 -52 V
287 -138 V
287 -53 V
287 -189 V
286 -57 V
287 -216 V
287 -51 V
287 -243 V
287 -49 V
1883 3411 Circle
2170 3398 Circle
2457 3346 Circle
2744 3208 Circle
3031 3155 Circle
3318 2966 Circle
3604 2909 Circle
3891 2693 Circle
4178 2642 Circle
4465 2399 Circle
4752 2350 Circle
6495 3555 Circle
% End plot #1
% Begin plot #2
2.000 UP
7.000 UL
LT0
0.72 0.53 0.04 C LCb setrgbcolor
5960 3275 M
[ [(Helvetica) 280.0 0.0 true true 0 (N = 2)]
] -93.3 MRshow
LT0
0.72 0.53 0.04 C 6128 3275 M
735 0 V
1883 3414 M
287 -103 V
287 -104 V
287 -140 V
287 -148 V
287 -155 V
286 -168 V
287 -170 V
287 -173 V
287 -169 V
287 -57 V
1883 3414 TriU
2170 3311 TriU
2457 3207 TriU
2744 3067 TriU
3031 2919 TriU
3318 2764 TriU
3604 2596 TriU
3891 2426 TriU
4178 2253 TriU
4465 2084 TriU
4752 2027 TriU
6495 3275 TriU
% End plot #2
% Begin plot #3
2.000 UP
7.000 UL
LT1
0.00 0.39 0.00 C LCb setrgbcolor
5960 2995 M
[ [(Helvetica) 280.0 0.0 true true 0 (N = 3)]
] -93.3 MRshow
LT1
0.00 0.39 0.00 C 6128 2995 M
735 0 V
1883 3374 M
287 -160 V
287 -154 V
287 -174 V
287 -186 V
287 -196 V
286 -203 V
287 -199 V
287 -135 V
287 -52 V
287 -42 V
1883 3374 Dia
2170 3214 Dia
2457 3060 Dia
2744 2886 Dia
3031 2700 Dia
3318 2504 Dia
3604 2301 Dia
3891 2102 Dia
4178 1967 Dia
4465 1915 Dia
4752 1873 Dia
6495 2995 Dia
% End plot #3
% Begin plot #4
2.000 UP
7.000 UL
LT0
0.93 0.51 0.93 C LCb setrgbcolor
5960 2715 M
[ [(Helvetica) 280.0 0.0 true true 0 (N = 4)]
] -93.3 MRshow
LT0
0.93 0.51 0.93 C 6128 2715 M
735 0 V
1883 3305 M
287 -200 V
287 -197 V
287 -212 V
287 -223 V
287 -236 V
286 -240 V
287 -129 V
287 -59 V
287 -45 V
287 -16 V
1883 3305 Star
2170 3105 Star
2457 2908 Star
2744 2696 Star
3031 2473 Star
3318 2237 Star
3604 1997 Star
3891 1868 Star
4178 1809 Star
4465 1764 Star
4752 1748 Star
6495 2715 Star
% End plot #4
% Begin plot #5
2.000 UP
7.000 UL
LT0
0.00 0.00 0.55 C LCb setrgbcolor
5960 2435 M
[ [(Helvetica) 280.0 0.0 true true 0 (N = 5)]
] -93.3 MRshow
LT0
0.00 0.00 0.55 C 6128 2435 M
735 0 V
1883 3231 M
287 -238 V
287 -238 V
287 -251 V
287 -261 V
287 -277 V
286 -190 V
287 -32 V
1883 3231 CircleF
2170 2993 CircleF
2457 2755 CircleF
2744 2504 CircleF
3031 2243 CircleF
3318 1966 CircleF
3604 1776 CircleF
3891 1744 CircleF
6495 2435 CircleF
% End plot #5
% Begin plot #6
2.000 UP
7.000 UL
LT0
0.00 1.00 1.00 C % End plot #6
% Begin plot #7
1.000 UL
LT6
0.75 0.25 0.00 C 1883 3485 M
287 -104 V
287 -105 V
287 -105 V
287 -105 V
287 -105 V
286 -105 V
287 -104 V
287 -105 V
287 -105 V
287 -105 V
% End plot #7
% Begin plot #8
stroke
LT7
0.72 0.53 0.04 C 1883 3409 M
287 -143 V
287 -143 V
287 -144 V
287 -143 V
287 -143 V
286 -143 V
287 -143 V
287 -143 V
287 -143 V
287 -143 V
% End plot #8
% Begin plot #9
stroke
LT8
0.00 0.39 0.00 C 1883 3332 M
287 -181 V
287 -182 V
287 -181 V
287 -182 V
287 -181 V
286 -181 V
287 -182 V
287 -181 V
287 -182 V
287 -181 V
% End plot #9
% Begin plot #10
stroke
LT0
0.93 0.51 0.93 C 1883 3256 M
287 -220 V
287 -220 V
287 -220 V
287 -219 V
287 -220 V
286 -220 V
287 -219 V
287 -220 V
287 -220 V
287 -220 V
% End plot #10
% Begin plot #11
stroke
LT1
0.00 0.00 0.55 C 1883 3179 M
287 -258 V
287 -258 V
287 -258 V
287 -258 V
287 -258 V
286 -258 V
287 -258 V
% End plot #11
% Begin plot #12
stroke
LT2
0.00 1.00 1.00 C % End plot #12
1.000 UL
LTb
LCb setrgbcolor
1596 3695 N
0 -2799 V
3443 0 V
0 2799 V
-3443 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
